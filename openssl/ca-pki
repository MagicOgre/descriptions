ROOT CA

Create the direcotry structure:
mkdir /root/ca
cd /root/ca
mkdir certs crl newcerts private csr cnf
chmod 700 private
touch index.txt

Downloadthe openssl.cnf file from here:
git clone https://github.com/MagicOgre/descriptions/blob/main/openssl/openssl.cnf

Generate a serial number for keeping track of certs:
openssl rand -hex 16 > serial

Generate root ca private key:
openssl genpkey -algorithm EC -pkeyopt ec_paramgen_curve:prime256v1 -aes256 -out private/ca.key

Set permissions to the key:
chmod 400 private private/ca.key

Generate root ca:
openssl req -config openssl.cnf -key private/rootca.key -new -x509 -days 7300 -sha256 -extensions v3_ca -out certs/rootca.crt

Verify the cert:
openssl x509 -noout -text -in certs/rootca.crt



INTERMEDIATE CA
Switch to the other computer

Create the direcotry structure:
mkdir /root/ca/intermediate
cd /root/ca/intermeiate
mkdir certs crl newcerts private csr cnf
chmod 700 private
touch index.txt

Generate a serial number for keeping track of certs:
openssl rand -hex 16 > serial

Generate a serial number for keeping track of revocation list:
openssl rand -hex 16 > /root/ca/intermediate/crlnumber

Generate root ca private key:
openssl genpkey -algorithm EC -pkeyopt ec_paramgen_curve:prime256v1 -aes256 -out private/ca.key

Set permissions to the key:
chmod 400 private private/intermediate.key

Edit the openssl.cnf file:
policy            = policy_strict >>>> policy_loose
x509_extensions   = v3_ca >>>>>> v3_intermediate_ca

Generate certifiacate signing request:
openssl req -config cnf/openssl.cnf -new -sha256 -key private/intermediate.key -out csr/intermediate.csr

Sign the request with the rootca key:
openssl ca -config cnf/openssl.cnf -extensions v3_intermediate_ca -days 3650 -notext -md sha256 -in csr/intermediate.csr -out certs/intermediate.crt

veryfy wit the root ca:
  openssl verify -CAfile certs/ca.crt certs/intermediate.crt

Combine the certificates into one chain file:
cat certs/intermediate.crt certs/ca.crt > certs/ca-chain.pem


SERVER CERT:

create a key:
openssl ecparam -name prime256v1 -genkey -noout -out private/test.key

Create a csr:
openssl req -config cnf/openssl.cnf -key private/test.key -new -sha256 -out csr/test.csr

Edit the openssl.cnf file:
policy            = policy_strict >>>> policy_loose
private_key       = $dir/private/intermediate.key
certificate       = $dir/certs/intermediate.crt

Sign certificate with intermediate cert:
openssl ca -config cnf/root.cnf -extensions server_cert -days 375 -notext -md sha256 -in csr/test.csr -out certs/test.csr
